#include <iostream>
#include <algorithm>

using namespace std;

int dp[10001];

// วิธีคิด --> เลือกว่าถ้าเอาตัวตำแหน้งที่ i มาคิดแล้วจะใส่หลังตัวไหนได้บ้าง
// ex 5 1 | 1 99 1 99 1
// dp --> 1 99 2 100 3
// loop ตั้งแต่ ตัว ที่ i ถึง i -2k + 1
// 2k+1 คือเทียบแล้วมันชัวๆว่สจะไม่มีช่องว่างนั้นเอง
// ex ถ้า k = 1 แล้ว i = 5 มันก็เลือกได้ว่าจะต่อหลังจาก 4, 3, 2 ***
int main() {
    int n,k,x;
    cin >> n >> k;

    for(int i = 1; i <= n; i++){
        cin >> x;
        if(i <= k+1){
            // ex กรณี k =1; i = 3 มันควรเลือกได้ 2, 1, 0 แต่จริงๆ 0 มันไม่ได้เพราะมันไม่มี station
            dp[i] = x;
        } else {
            // เราหา min ที่สุดของ i ว่าถ้าเลือก i แล้วควรต่อตัวไหน
            dp[i] = dp[i-1] + x; // --> ตอนคิด min มันจะได้ != 0 ขะตั้ง dp[i] =9999999 ก็ได้
            for(int j = 1; j <= (k*2)+1; j++){
                // เราไม่เอากรณี ที่มัน == 0
                if(i-j >= 1){
                    dp[i] = min(dp[i-j]+ x, dp[i]);
                }
            }
        }
    }

    int min_ans = dp[n];
    // max(1,n-k) เพราะมีกรณี k > n
    for(int i = n; i >= max(1,n-k) ; i--){
        // เราหาต้องตั้งสถานีไหนที่มันยังตรง condition แล้วค่าน้อยสุด
        min_ans = min(min_ans, dp[i]);
    }
    cout << min_ans;
}
